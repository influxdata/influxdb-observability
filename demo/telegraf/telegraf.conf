[global_tags]

[agent]
  interval = "30s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  quiet = false
  omit_hostname = false

[[outputs.influxdb_v2]]
  urls = ["http://${INFLUXDB_ADDR}:8086"] # Replace with your InfluxDB v2 instance URL
  token = "$[INFLUXDB_TOKEN}" # Replace with your InfluxDB v2 token
  organization = "${INFLUXDB_ORG}" # Replace with your InfluxDB v2 organization name
  bucket = "${INFLUXDB_BUCKET}" # Replace with your InfluxDB v2 bucket name

[[inputs.prometheus]]
  name_override = "metrics"
  ## By specifying a "v2" string to the version, you can use the new v2
  ## metrics format.
  metric_version = 2

  ## An array of urls to scrape metrics from.
  urls = ["http://localhost:8083/metrics"] # Replace with your Prometheus target URL

  ## An array of Kubernetes services to scrape metrics from.
  # kubernetes_services = ["http://my-service-dns.my-namespace:9100/metrics"]

  ## Kubernetes config file to create client.
  # kube_config = "/path/to/kubernetes.config"

  ## Scrape interval
  # interval = "1m"

  ## Scrape metrics for kube-system services.
  ## If set to true, it is recommended to limit your urls to avoid too much
  ## data being scraped.
  # monitor_kubernetes_pods = false

  [[processors.regex]]
  namepass = ["metrics"]

  [[processors.regex.tags]]
    key = "_measurement"
    pattern = "(.*)_([^_]*)_([^_]*)_([^_]*)_([^_]*)"
    replacement = "${1}_${2}_${3}_${4}"
    result_key = "prefix"
  [[processors.regex.tags]]
    key = "_measurement"
    pattern = "(.*)_([^_]*)_([^_]*)_([^_]*)_([^_]*)"
    replacement = "${5}"
    result_key = "suffix"