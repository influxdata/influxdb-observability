services:

  jaeger-query:
    image: jaegertracing/jaeger-query:1.41
    stop_grace_period: 10s
    ports:
    - "16686:16686" # web UI
    depends_on:
    - jaeger-influxdb
    environment:
      #QUERY_BEARER_TOKEN_PROPAGATION: true
      LOG_LEVEL: warn
      SPAN_STORAGE_TYPE: grpc-plugin
      GRPC_STORAGE_SERVER: jaeger-influxdb:17271
      GRPC_STORAGE_CONNECTION_TIMEOUT: 30s
      QUERY_HTTP_SERVER_HOST_PORT: :16686
      ADMIN_HTTP_HOST_PORT: :16687
      QUERY_UI_CONFIG: /jaeger-ui-config.json
    volumes:
    - ./demo/jaeger-ui-config.json:/jaeger-ui-config.json:ro

  #  grafana-jaeger-influxdb:
  #    image: grafana/grafana-oss:9.2.2
  #    stop_grace_period: 1s
  #    ports:
  #    - "3000:3000" # web UI
  #    depends_on:
  #    - jaeger-query

  jaeger-influxdb:
    build:
      context: .
      dockerfile: jaeger-influxdb/Dockerfile
    image: jaeger-influxdb:local
    stop_grace_period: 10s
    environment:
      LOG_LEVEL: info
      LISTEN_ADDR: :17271
      INFLUXDB_TIMEOUT: 30s
      # required: hostname or hostname:port
      INFLUXDB_ADDR:
      # required: either BUCKETID or BUCKETNAME
      INFLUXDB_BUCKETID:
      INFLUXDB_BUCKETNAME:
      # required
      INFLUXDB_TOKEN:

  hotrod:
    build:
      context: .
      dockerfile: demo/Dockerfile.hotrod
    image: hotrod:local
    stop_grace_period: 1s
    ports:
    - "8080:8080" # web UI
    depends_on:
    - otelcol-influxdb
    environment:
      JAEGER_AGENT_HOST: otelcol-influxdb
      JAEGER_AGENT_PORT: 6831

#  microsim:
#    build:
#      context: .
#      dockerfile: demo/Dockerfile.microsim
#    image: microsim:local
#    stop_grace_period: 1s
#    depends_on:
#    - otelcol-influxdb
#    command: -d 24h -j http://otelcol-influxdb:14268/api/traces

  otelcol-influxdb:
    build:
      context: .
      dockerfile: otelcol-influxdb/Dockerfile
    image: otelcol-influxdb:local
    command: [ "--config", "/config.yml" ]
    stop_grace_period: 10s
    volumes:
    - ./demo/otelcol-config.yml:/config.yml:ro
