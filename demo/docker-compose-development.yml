services:

  jaeger-query:
    image: jaegertracing/jaeger-query:1.49
    stop_grace_period: 10s
    ports:
    - "16686:16686" # web UI
    depends_on:
    - jaeger-influxdb
    environment:
      LOG_LEVEL: warn
      SPAN_STORAGE_TYPE: grpc-plugin
      GRPC_STORAGE_SERVER: jaeger-influxdb:17271
      GRPC_STORAGE_CONNECTION_TIMEOUT: 30s
      QUERY_HTTP_SERVER_HOST_PORT: :16686
      ADMIN_HTTP_HOST_PORT: :16687
      QUERY_UI_CONFIG: /jaeger-ui-config.json
      QUERY_ENABLE_TRACING: false
    volumes:
    - ./demo/jaeger-ui-config.json:/jaeger-ui-config.json:ro

  jaeger-influxdb:
    build:
      context: .
      dockerfile: jaeger-influxdb/Dockerfile
    image: jaeger-influxdb:local
    stop_grace_period: 10s
    environment:
      LOG_LEVEL: debug
      LISTEN_ADDR: :17271
      INFLUXDB_TIMEOUT: 30s
    env_file:
    - demo/.env

  hotrod:
    build:
      context: .
      dockerfile: demo/Dockerfile.hotrod
    image: hotrod:local
    stop_grace_period: 1s
    ports:
    - "8080:8080" # web UI
    - "8083:8083"
    depends_on:
    - otelcol-influxdb
    environment:
      JAEGER_AGENT_HOST: otelcol-influxdb
      JAEGER_AGENT_PORT: 6831
    command: ["all", "-m", "prometheus"]

  otelcol-influxdb:
    build:
      context: .
      dockerfile: otelcol-influxdb/Dockerfile
    image: otelcol-influxdb:local
    command: ["--config", "/config.yml"]
    stop_grace_period: 10s
    volumes:
    - ./demo/otelcol-config.yml:/config.yml:ro
    env_file:
    - demo/.env

  grafana:
    image: grafana/grafana:latest
    ports:
    - "3000:3000" # web UI
    environment:
    - INFLUX_HOST=${INFLUXDB_ADDR}
    - INFLUX_TOKEN=${INFLUXDB_TOKEN}
    - INFLUX_ORG=${INFLUXDB_ORG}
    - INFLUX_BUCKET=${INFLUXDB_BUCKET}
    - GF_INSTALL_PLUGINS=influxdata-flightsql-datasource
    volumes:
    - ./demo/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    - ./demo/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
